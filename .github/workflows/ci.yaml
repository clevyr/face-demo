name: CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build ${{ matrix.name }}
    strategy:
      matrix:
        image: [app, aiserver]
        include:
          - image: app
            name: App
            dir: WebServer
          - image: aiserver
            name: AI Server
            dir: server
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Get GCR credentials
        id: gcr-creds
        uses: clevyr/gcr-key-parse-action@master
        env:
          GCLOUD_KEY_FILE: ${{ secrets.GCLOUD_KEY_FILE }}
          HOST_PROJECT: momma-motus
      - name: Set current branch
        id: branch
        run: printf '::set-output name=short_ref::%s' $(echo -n "${GITHUB_REF##refs/*/}" | tr -Cs 'A-Za-z0-9._-' '_')
      - uses: whoan/docker-build-with-cache-action@v4
        with:
          dockerfile: ${{ matrix.dir }}/Dockerfile
          image_name: face-demo/${{ matrix.image }}
          image_tag: ${{ github.sha }},${{ steps.branch.outputs.short_ref }}
          registry: ${{ steps.gcr-creds.outputs.docker_repo }}
          username: ${{ steps.gcr-creds.outputs.docker_username }}
          password: ${{ steps.gcr-creds.outputs.docker_password }}

  deploy-aiserver:
    runs-on: ubuntu-latest
    needs: [build]
    name: Deploy ${{ matrix.name }}
    if: github.ref == 'refs/heads/master'
    strategy:
      matrix:
        image: [app, aiserver]
        include:
          - image: app
            name: App
          - image: aiserver
            name: AI Server
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Get GCR credentials
        id: gcr-creds
        uses: clevyr/gcr-key-parse-action@master
        env:
          GCLOUD_KEY_FILE: ${{ secrets.GCLOUD_KEY_FILE }}
          HOST_PROJECT: momma-motus
      - name: Deploy
        uses: clevyr/kubernetes-deploy-action@master
        env:
          KUBE_NAMESPACE: face-demo-prod
          DEPLOYMENT_MODIFIER: ${{ matrix.image }}
          REPO_URL: ${{ steps.gcr-creds.outputs.docker_repo }}/face-demo/${{ matrix.image }}
          REPO_TAG: ${{ github.sha }}
          GCLOUD_GKE_PROJECT: ${{ steps.gcr-creds.outputs.gcloud_gke_projectId }}
          GCLOUD_CLUSTER_NAME: ${{ steps.gcr-creds.outputs.gcloud_cluster }}
          GCLOUD_REGION: ${{ steps.gcr-creds.outputs.gcloud_region }}
          GCLOUD_KEY_FILE: ${{ secrets.GCLOUD_KEY_FILE }}
          DEPLOY_TIMEOUT: 5m
      - name: Post to Slack
        uses: 8398a7/action-slack@v2
        if: always()
        with:
          status: ${{ job.status }}
          author_name: ${{ matrix.name }} Deploy Status
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
